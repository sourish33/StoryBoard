<!DOCTYPE html>
<html lang="en">
    <%- include('../partials/header'); %>
    <title>Dashboard</title>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="sweetalert2.all.min.js"></script>
</head>
<body>
    <%- include('../partials/nav-admin.ejs') %> 
    <div class="container">
        <div class="header-box">
                <h5 class="hide-on-small">Users (<%= users.length %> ) </h5>
                <div class="top-right-btns">
                  <a href="#" class="waves-effect waves-purple btn">Create New</a>
                  <a href="#" class="waves-effect waves-light btn">Filter</a>
                </div>
        </div>
        <div id="selected-box" class= "invisible">
          <p>Selected (<span id="numselected"></span>)</p>
          <a class="waves-effect waves-light btn-small hidden" id="deleteAllBtn">Delete</a>
        </div>
        <div class="table-holder">
          <table class="highlight" id="usertable">
            <thead>
              <tr>
                <th>
                  <label>
                    <input type="checkbox" id="all-checkboxes">
                    <span></span>
                  </label>
                </th>
                <th>
                  Email
                </th>
                <th>
                  First Name <i class="fas fa-sort" style="cursor: pointer;" id='fname'></i>
                </th>
                <th>
                  Last Name <i class="fas fa-sort" style="cursor: pointer;" id='lname'></i>
                </th>
                <th>
                  Wrote <i class="fas fa-sort" style="cursor: pointer;" id='wrote'></i>
                </th>
                <th>
                  Liked By <i class="fas fa-sort" style="cursor: pointer;" id='likedby'></i>
                </th>
                <th>
                  Liked <i class="fas fa-sort" style="cursor: pointer;" id='liked'></i>
                </th>
                <th>
                  Joined <i class="fas fa-sort" style="cursor: pointer;" id='joined'></i>
                </th>
                <th>
                </th>
              </tr>
            </thead>
            <tbody>
              <% for( let user of users) { %>
                <tr>
                  <td>
                    <label>
                      <input type="checkbox" id=<%="sel_"+user["_id"] %>>
                      <span></span>
                    </label> 
                  </td>
                  <td>
                    <%= user["Email"] %> 
                  </td>
                  <td>
                    <%= user["First Name"] %> 
                  </td>
                  <td>
                    <%= user["Last Name"] %> 
                  </td>
                  <td>
                    <%= user["Wrote"] %> 
                  </td>
                  <td>
                    <%= user["Liked By"] %> 
                  </td>
                  <td>
                    <%= user["Liked"] %> 
                  </td>
                  <td>
                    <%= user["Joined"] %> 
                  </td>
                  <td>
                    <div>
                      <a class='dropdown-trigger btn dots' href='#' data-target=<%= user["_id"] %> >...</a>
                      <ul id=<%= user._id %> class='dropdown-content'>
                        <li><a href=<%='/users/profile/'+ user._id %>>View</a></li>
                        <li><a href=<%= '/users/edit/'+user._id %>>Edit</a></li>
                        <li><a href="#!">Delete</a></li>
                      </ul>
                    </div>
                  </td>
                </tr>
              
              <% } %>
            </tbody>
          </table>
        </div>

    </div>

    <%- include('../partials/footer.ejs') %> 
    <script src="/js/publicViews.js"></script>
    <script>
      // const data = <%- JSON.stringify(users) %>;
      // fillTable('usertable', data)
      const table = document.getElementById('usertable')
      const tb = table.getElementsByTagName('tbody')[0]
      const originalRows = Array.from(tb.getElementsByTagName('tr'))

      let checkedIds = []
      const checkboxes = document.querySelectorAll(`[id^="sel_"]`)

        
        const selectAllCheckboxes = document.getElementById('all-checkboxes')
        const selectedBox = document.getElementById('selected-box')
        const numselected = document.getElementById('numselected')
        const deleteAllBtn = document.getElementById('deleteAllBtn')


        const showSelectedBox = () => {
          selectedBox.classList.remove('invisible')
          deleteAllBtn.classList.remove('hidden')
        }

        const hideSelectedBox = () => {
          selectedBox.classList.add('invisible')
          deleteAllBtn.classList.add('hidden')
        }

        const handleCheckBoxes = () => {
          checkedIds = []
          hideSelectedBox()
          for (let checkbox of checkboxes){
          if (checkbox.checked === true){//reset all checkboxes when table loads
            checkbox.checked=false
          }
          checkbox.addEventListener('change', function() {
            const checkedId = this.id.split('_')[1]
            if (this.checked) {
              checkedIds.push(checkedId)
            } else {
              checkedIds = checkedIds.filter(el=>el!==checkedId)
            }
            if (checkedIds.length>0){
              showSelectedBox()
              numselected.innerHTML = checkedIds.length
            } else {
              hideSelectedBox()
            }
          })
          
        }

        }
        handleCheckBoxes()
      


        selectAllCheckboxes.addEventListener('change', function(){
          if (this.checked){
            checkedIds = []
            for (let checkbox of checkboxes){
              checkbox.checked = true
              const checkedId = checkbox.id.split('_')[1]
              checkedIds.push(checkedId)
            }
            showSelectedBox()
            numselected.innerHTML = checkedIds.length
          }
          else {
            for (let checkbox of checkboxes){
              checkbox.checked = false
            }
            checkedIds = []
            hideSelectedBox()
            numselected.innerHTML = checkedIds.length
          }
          
        })

        function isValidDate(date) {
          return /^\d{4}-\d{2}-\d{2}$/.test(date);
        }

        function isOneOrTwoDigits(input) {
          return /^\d{1,2}$/.test(input);
        }

        const getValueInCol = (row, n) => {
          const cells = row.getElementsByTagName('td')
          const str = cells[n].innerHTML
          if (isValidDate(str)) return str
          if (isOneOrTwoDigits(str)) return +str
          return str
        }

        const sortRows = (col, dir) => {
          const table = document.getElementById('usertable')
          const tb = table.getElementsByTagName('tbody')[0]
          const rows = Array.from(tb.getElementsByTagName('tr'))
          rows.sort((a,b)=>{
              if (  getValueInCol(a,col) < getValueInCol(b,col) ) {
                return -1*dir;
              }
              if (  getValueInCol(a,col)  > getValueInCol(b,col) ) {
                return dir;
              }
              return 0;
            })

            removeAllChildNodes(tb)
            for (let row of rows){
              tb.appendChild(row)
          }

        }

        const filterRows = (keyword) => {
          const table = document.getElementById('usertable')
          const tb = table.getElementsByTagName('tbody')[0]
          const rows = Array.from(tb.getElementsByTagName('tr'))

          const filteredRows = rows.filter(row => {
            return getValueInCol(row,2).includes(keyword)
          })
          if (filteredRows.length===0) return
          removeAllChildNodes(tb)
            for (let row of filteredRows){
              tb.appendChild(row)
          }
        }
        const resetRows = () => {
          const table = document.getElementById('usertable')
          const tb = table.getElementsByTagName('tbody')[0]
          removeAllChildNodes(tb)
            for (let row of originalRows){
              tb.appendChild(row)
          }

        }

        let fnameDir = 1
        const fname = document.getElementById('fname')
        fname.addEventListener('click', ()=>{
          fnameDir *= -1
          sortRows(2, fnameDir)
        })

        let lnameDir = 1
        const lname = document.getElementById('lname')
        lname.addEventListener('click', ()=>{
          lnameDir *= -1
          sortRows(3, lnameDir)
        })

        let wroteDir = 1 
        const wrote = document.getElementById('wrote')
        wrote.addEventListener('click', ()=>{
          wroteDir *= -1
          sortRows(4, wroteDir)
        })

        let likedbyDir = 1 
        const likedby = document.getElementById('likedby')
        likedby.addEventListener('click', ()=>{
          likedbyDir *= -1
          sortRows(5, likedbyDir)
        })

        let likedDir = 1 
        const liked = document.getElementById('liked')
        liked.addEventListener('click', ()=>{
          likedDir *= -1
          sortRows(6, likedDir)
        })

        let joinedDir = 1 
        const joined = document.getElementById('joined')
        joined.addEventListener('click', ()=>{
          joinedDir *= -1
          sortRows(7, joinedDir)
        })
        
        



        const logout = () =>{
                window.location.href = "/auth/logout" 
        }

    </script>

</body>
</html>